table Carencias
	lineageTag: 69033204-97dd-47f0-9181-66444baa4bd5

	measure 'Carencias Acceso Alimentacion' = ```
			
			CALCULATE(
			    SUM(Pobreza[VALOR]),
			    FILTER(
			        Pobreza,
			        Pobreza[INDICADORES] IN {
			            "CARENCIAS POR ACCESO A LA ALIMENTACIÓN PERSONAS 2010",
			            "CARENCIAS POR ACCESO A LA ALIMENTACIÓN PERSONAS 2015",
			            "CARENCIAS POR ACCESO A LA ALIMENTACIÓN PERSONAS 2020"
			        } &&
			        Pobreza[MUNICIPIO] = "Estatal"
			    )
			)
			
			```
		lineageTag: df681dd0-7fbd-4674-b80f-08da42724150

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Carencias Acceso Servicios Basicos Vivienda' = ```
			
			CALCULATE(
			    SUM(Pobreza[VALOR]),
			    FILTER(
			        Pobreza,
			        Pobreza[INDICADORES] IN {
			            "CARENCIAS POR ACCESO A LOS SERVICIOS BÁSICOS EN LA VIVIENDA PERSONAS 2010",
			            "CARENCIAS POR ACCESO A LOS SERVICIOS BÁSICOS EN LA VIVIENDA PERSONAS 2015",
			            "CARENCIAS POR ACCESO A LOS SERVICIOS BÁSICOS EN LA VIVIENDA PERSONAS 2020"
			        } &&
			        Pobreza[MUNICIPIO] = "Estatal"
			    )
			)
			
			```
		lineageTag: 8abeb02d-6d65-4c76-96e7-600dddf92b12

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Carencias Calidad Espacios Vivienda' = ```
			
			CALCULATE(
			    SUM(Pobreza[VALOR]),
			    FILTER(
			        Pobreza,
			        Pobreza[INDICADORES] IN {
			            "CARENCIAS POR CALIDAD Y ESPACIOS DE LA VIVIENDA PERSONAS 2010",
			            "CARENCIAS POR CALIDAD Y ESPACIOS DE LA VIVIENDA PERSONAS 2015",
			            "CARENCIAS POR CALIDAD Y ESPACIOS DE LA VIVIENDA PERSONAS 2020"
			        } &&
			        Pobreza[MUNICIPIO] = "Estatal"
			    )
			)
			
			```
		lineageTag: 62d29997-726d-4268-82e0-0baa76857d68

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Carencias Acceso Seguridad Social' = ```
			
			CALCULATE(
			    SUM(Pobreza[VALOR]),
			    FILTER(
			        Pobreza,
			        Pobreza[INDICADORES] IN {
			            "CARENCIAS POR ACCESO A LA SEGURIDAD SOCIAL PERSONAS 2010",
			            "CARENCIAS POR ACCESO A LA SEGURIDAD SOCIAL PERSONAS 2015",
			            "CARENCIAS POR ACCESO A LA SEGURIDAD SOCIAL PERSONAS 2020"
			        } &&
			        Pobreza[MUNICIPIO] = "Estatal"
			    )
			)
			
			```
		lineageTag: 43b247c7-43ae-4db2-8efc-2a8176458519

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Carencias Acceso Servicios Salud' = ```
			
			CALCULATE(
			    SUM(Pobreza[VALOR]),
			    FILTER(
			        Pobreza,
			        Pobreza[INDICADORES] IN {
			            "CARENCIAS POR ACCESO A LOS SERVICIOS DE SALUD PERSONAS 2010",
			            "CARENCIAS POR ACCESO A LOS SERVICIOS DE SALUD PERSONAS 2015",
			            "CARENCIAS POR ACCESO A LOS SERVICIOS DE SALUD PERSONAS 2020"
			        } &&
			        Pobreza[MUNICIPIO] = "Estatal"
			    )
			)
			
			```
		lineageTag: 7ebdd865-1df4-447b-9204-624ec492d5af

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Rezago Educativo Personas' = ```
			
			CALCULATE(
			    SUM(Pobreza[VALOR]),
			    FILTER(
			        Pobreza,
			        Pobreza[INDICADORES] IN {
			            "REZAGO EDUCATIVO PERSONAS 2010",
			            "REZAGO EDUCATIVO PERSONAS 2015",
			            "REZAGO EDUCATIVO PERSONAS 2020"
			        } &&
			        Pobreza[MUNICIPIO] = "Estatal"
			    )
			)
			
			```
		lineageTag: c22cb980-6736-40e3-bae4-8f7c4eee7edb

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	partition Carencias = m
		mode: import
		source =
				let
				    Origen = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i44FAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Columna1 = _t]),
				    #"Tipo cambiado" = Table.TransformColumnTypes(Origen,{{"Columna1", type text}}),
				    #"Columnas quitadas" = Table.RemoveColumns(#"Tipo cambiado",{"Columna1"})
				in
				    #"Columnas quitadas"

	annotation PBI_ResultType = Table

