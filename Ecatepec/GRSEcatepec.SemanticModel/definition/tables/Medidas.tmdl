table Medidas
	lineageTag: b2c70e43-639c-45a7-bec2-774f67fad58d

	measure Poblacion_Total_Nacional = ```
			
			CALCULATE(
			    SUM(GRS[Valor]),
			    GRS[Indicador] = "POBLACIÓN TOTAL",
			    GRS[CVE_ESTADO] = "00",
			    REMOVEFILTERS(GRS[CVE_ESTADO], GRS[CVE_MUNICIPIO], GRS[AÑO])
			)
			
			```
		lineageTag: da5cbd64-c4b3-454c-8922-f483a71a182a

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure Poblacion_Total_Estatal = ```
			
			CALCULATE(
			    SUM(GRS[Valor]),
			    GRS[Indicador] = "POBLACIÓN TOTAL",
			    GRS[CVE_MUNICIPIO] = "000",
			    REMOVEFILTERS(GRS[CVE_MUNICIPIO])
			)
			
			```
		formatString: 0
		lineageTag: 37cd9631-19d8-4796-9e92-5186cf33f72c

	measure Poblacion_Total_Municipal =
			
			CALCULATE(
			    SUM(GRS[Valor]),
			    GRS[Indicador] = "POBLACIÓN TOTAL"
			)
		formatString: 0
		lineageTag: 027b95be-5953-4ce1-9ab5-887f00ef9b9e

	measure Indicador_Nacional = ```
			
			CALCULATE(
			    SUM(GRS[Valor]),
			    REMOVEFILTERS(GRS[CVE_ESTADO], GRS[CVE_MUNICIPIO]),
			    GRS[CVE_ESTADO] = "00",
			    VALUES(GRS[Indicador])
			)
			
			```
		lineageTag: 606c893d-dc59-4653-8f02-6cd1dca5c305

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure Indicador_Estatal = ```
			
			CALCULATE(
			    SUM(GRS[Valor]),
			    REMOVEFILTERS(GRS[CVE_MUNICIPIO]),
			    GRS[CVE_MUNICIPIO] = "000",
			    VALUES(GRS[Indicador])
			)
			
			```
		lineageTag: 77d78691-dfad-4314-8782-f44d9319ab52

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure Indicador_Municipal =
			
			CALCULATE(
			    SUM(GRS[Valor]),
			    VALUES(GRS[Indicador])
			)
		lineageTag: 17c07cbd-6d1f-4aed-a98c-4026d0c47a99

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure Titulo_Dinamico = ```
			
			"Indicador Seleccionado: " & SELECTEDVALUE(GRS[Indicador], "Seleccione un Indicador")
			
			```
		lineageTag: 468ef817-5435-4453-990c-7f623d067678

	partition Medidas = m
		mode: import
		source =
				let
				    Origen = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i44FAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Columna1 = _t]),
				    #"Tipo cambiado" = Table.TransformColumnTypes(Origen,{{"Columna1", type text}}),
				    #"Columnas quitadas" = Table.RemoveColumns(#"Tipo cambiado",{"Columna1"})
				in
				    #"Columnas quitadas"

	changedProperty = Name

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navegación

